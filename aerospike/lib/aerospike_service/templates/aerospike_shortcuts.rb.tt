# frozen_string_literal: true

# This initializer creates convenient methods for accessing
# AerospikeService namespace clients
#
# Generated by AerospikeService::Generators::ShortcutsGenerator

# Load the configuration if not already loaded
if AerospikeService.configuration.namespaces.empty?
  config_file = Rails.root.join("config", "aerospike_service.yml")
  AerospikeService.load_configuration(config_file) if File.exist?(config_file)
end

# Get all configured namespaces
namespaces = AerospikeService.configuration.namespaces

# Create logger methods
logger = Rails.logger

if logger
  logger.info "AerospikeService shortcuts initializer loaded"
  logger.info "Available namespaces: #{namespaces.join(', ')}"
  
  # Log a warning if no namespaces found
  if namespaces.empty?
    logger.warn "No namespaces found in AerospikeService configuration"
  end
end

# Define methods for each namespace on the AerospikeService module
namespaces.each do |namespace|
  # Skip if method already defined
  next if AerospikeService.respond_to?(namespace.to_sym)
  
  # Method is automatically defined in AerospikeService through method_missing
  # This just logs that the shortcut is available
  if logger
    logger.debug "AerospikeService.#{namespace} shortcut available"
  end
end

# Inform about usage
puts "AerospikeService shortcuts loaded for: #{namespaces.join(', ')}" if defined?(Rails::Server)
